#pragma checksum "G:\asp net project\NearbySoft\NerbySoft\asp_net_mvc\asp_net_mvc\Views\Announsment\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d27d63082abd024dc1cccc2efa5a4db81331fc84"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Announsment_Index), @"mvc.1.0.view", @"/Views/Announsment/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "G:\asp net project\NearbySoft\NerbySoft\asp_net_mvc\asp_net_mvc\Views\_ViewImports.cshtml"
using asp_net_mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "G:\asp net project\NearbySoft\NerbySoft\asp_net_mvc\asp_net_mvc\Views\_ViewImports.cshtml"
using asp_net_mvc.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d27d63082abd024dc1cccc2efa5a4db81331fc84", @"/Views/Announsment/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"925ac3579c879115ad33834b0ad0d20314b86d4f", @"/Views/_ViewImports.cshtml")]
    public class Views_Announsment_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<asp_net_mvc.Models.AnnouncementModels.IndexAnnounsmentModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<div class=\"text-center\">\r\n    <button class=\"myBtn\" data-toggle=\"modal\" data-target=\"#dialogCreate\" id=\"buttonCreateOpen\">Create</button>\r\n    <div id=\"PlaceForAnnouncement\">\r\n      \r\n    </div>\r\n\r\n</div>\r\n");
            WriteLiteral(@"<div class=""modal fade"" tabindex=""-1"" id=""dialogCreate"" role=""dialog"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""card card-waves"">
                <div class=""card-header"">
                    Create announcement
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""card-body"">
                    <div class=""datatable"">
                        <div class=""row"">
                            <div id=""CreateAnnouncement"" class=""col-lg-12"">
                                <div class=""form-group"">
                                    <label for=""registerLogin"">Title</label>
                                    <input class=""form-control"" id=""Title"" placeholder=""Title"" style="" display: block; width: 100%;"" type=""text"" oninput=""clearValid(this)"" />
    ");
            WriteLiteral(@"                                <div class=""invalid-feedback"" style=""display:block"">
                                    </div>
                                </div>
                                <div class=""form-group"">
                                    <label for=""registerLogin"">Description</label>
                                    <textarea class=""form-control"" id=""Description"" style=""width:100%"" placeholder=""Body"" oninput=""clearValid(this)""></textarea>
                                    <div class=""invalid-feedback"" style=""display:block"">
                                    </div>
                                </div>

                                <div style=""display: flex; flex-direction: row-reverse;"">
                                    <button type=""button"" class=""myBtn"" onclick=""createAnnouncement()"">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
     ");
            WriteLiteral("       </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            WriteLiteral(@"<div class=""modal fade"" tabindex=""-1"" id=""dialogUpdate"" role=""dialog"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""card card-waves"">
                <div class=""card-header"">
                    Update announcement
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <input id=""UpdateAnnouncementId"" hidden />
                <div class=""card-body"">
                    <div class=""datatable"">
                        <div class=""row"">
                            <div class=""col-lg-12"">
                                <div class=""form-group"">
                                    <label for=""registerLogin"">Title</label>
                                    <input class=""form-control"" id=""UpdateTitle"" placeholder=""Title"" style="" display: block; width: 100%;"" type=");
            WriteLiteral(@"""text"" oninput=""clearValid(this)"" />
                                    <div class=""invalid-feedback"" style=""display:block"">
                                    </div>
                                </div>
                                <div class=""form-group"">
                                    <label for=""registerLogin"">Description</label>
                                    <textarea class=""form-control"" id=""UpdateDescription"" style=""width:100%"" placeholder=""Body"" oninput=""clearValid(this)""></textarea>
                                    <div class=""invalid-feedback"" style=""display:block"">
                                    </div>
                                </div>
                                <div style=""display: flex; flex-direction: row-reverse;"">
                                    <button type=""button"" class=""myBtn"" onclick=""updateAnnouncement()"">Save</button>
                                </div>
                            </div>
                        </div>
           ");
            WriteLiteral("         </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            WriteLiteral(@"<div class=""modal fade"" tabindex=""-1"" id=""dialogView"" role=""dialog"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""card card-waves"">
                <div class=""card-header"">
                    Announcement
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""card-body"">
                    <div class=""datatable"">
                        <div class=""row"">
                            <div class=""col-lg-12"">
                                <div class=""form-group"">
                                    <h3>Title:</h3>
                                    <h5 id=""ViewAnnouncementTitle""></h5>
                                </div>
                                <div class=""form-group"">
                                    <h3>Description:</h3>
       ");
            WriteLiteral(@"                             <p id=""ViewAnnouncementDescription""></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
");
#nullable restore
#line 119 "G:\asp net project\NearbySoft\NerbySoft\asp_net_mvc\asp_net_mvc\Views\Announsment\Index.cshtml"
  await Html.RenderPartialAsync("PartialDelete", "Announcement");

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<script>
    document.addEventListener(""DOMContentLoaded"",()=> getAnnouncements())
    function createAnnounsmentElement(announsment) {
        let placeForAnnounsment = document.getElementById(""PlaceForAnnouncement"");
        let announsmentElement = document.createElement(""div"")
        announsmentElement.id = announsment.id;
        announsmentElement.classList.add(""announcement"");

        let templateForContentOfTopic = `<div class=""announcement_content"">
                    <strong>${announsment.id}. ${announsment.title}</strong>
                    <div>
                        ${announsment.description}
                    </div>
                    <div>
                        ${announsment.creationDate}
                    </div>
                </div>

                <div class=""announcement_btn"">
                    <button class=""myBtn"" data-toggle=""modal"" data-target=""#dialogUpdate"" id=""buttonUpdateOpen"" onclick=""updateAnnouncementModalOpen({id:'${ announsment.id}',title:'");
            WriteLiteral(@"${announsment.title}',description:'${announsment.description}'})"">Update</button>
                    <button class=""myBtn"" data-toggle=""modal"" data-target=""#dialogView"" id=""buttonViewOpen"" onclick=""viewAnnouncementModalOpen({id:'${announsment.id}',title:'${announsment.title}',description:'${announsment.description}',dateAdded:'${announsment.creationDate}'})"">View</button>
                    <button class=""myBtn"" data-toggle=""modal"" data-target=""#dialogDelete"" id=""buttonDeleteOpen"" onclick=""deleteAnnouncementModalOpen({Id:'${announsment.id}',Name:'${announsment.title}'})"">Delete</button>
                </div>`
        announsmentElement.innerHTML = templateForContentOfTopic
        placeForAnnounsment.appendChild(announsmentElement)
    }
    function getAnnouncements() {
        $.ajax({
            type: ""GET"",
            url: ""/Announsment/GetAnnouncements"",
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (data) {
    ");
            WriteLiteral(@"                let placeForAnnounsment = document.getElementById(""PlaceForAnnouncement"");
                    placeForAnnounsment.innerHTML = """";
                data.forEach(announsment => {
                    createAnnounsmentElement(announsment)
                })
            }

        });

    }
    function validateAnnouncement(title, description) {
        if (title.value == """")
            setValidationInElement(title, ""is-invalid"", ""Title is emtpy"");

        if (description.value == """")
            setValidationInElement(description, ""is-invalid"", ""Topic is emtpy"");
    }
    function createAnnouncement() {
        let title = document.getElementById(""Title"");
        let description = document.getElementById(""Description"");

        if (title.value == """")
            setValidationInElement(title, ""is-invalid"", ""Title is emtpy"");

        if (description.value == """")
            setValidationInElement(description, ""is-invalid"", ""Description is emtpy"");

        let dialo");
            WriteLiteral(@"gModel = ""CreateTCreateAnnouncementopic"";
        let idInputs = getIdInput(dialogModel);

        var functionSome = Array.prototype.some;
        var isCorrect = functionSome.call(idInputs, function (item) {
            let element = document.getElementById(item);
            return element.classList.contains(""is-invalid"");
        });

        if (isCorrect)
            return;

        let model = {
            Description: description.value,
            Title: title.value
        }
        $.ajax({
            type: ""POST"",
            url: ""/Announsment/Create"",
            data: JSON.stringify(model),
            contentType: ""application/json; charset=utf-8"",
            success: function () {
                getAnnouncements()
            },

        });
        title.value = """"
        description.value = """"
        $('#dialogCreate').modal('hide')


    }
    function updateAnnouncementModalOpen(announcement) {
        let announcementId = document.getElementById(""U");
            WriteLiteral(@"pdateAnnouncementId"");
        let title = document.getElementById(""UpdateTitle"");
        let description = document.getElementById(""UpdateDescription"");

        announcementId.value = announcement.id
        title.value = announcement.title
        description.value = announcement.description

        clearValid(title);
        clearValid(description);
    }
    function updateAnnouncement() {
        let announcementId = document.getElementById(""UpdateAnnouncementId"");
        let title = document.getElementById(""UpdateTitle"");
        let description = document.getElementById(""UpdateDescription"");

        validateAnnouncement(title, description);

        let dialogModel = ""UpdateTopic"";
        let idInputs = getIdInput(dialogModel);

        var functionSome = Array.prototype.some;
        var isCorrect = functionSome.call(idInputs, function (item) {
            let element = document.getElementById(item);
            return element.classList.contains(""is-invalid"");
        })");
            WriteLiteral(@";

        if (isCorrect)
            return;

        let model = {
            Id: Number(announcementId.value),
            Title: title.value,
            Description: description.value
        }

        $.ajax({
            type: ""POST"",
            url: ""/Announsment/Update"",
            data: JSON.stringify(model),
            contentType: ""application/json; charset=utf-8"",       
            success: function () {
                getAnnouncements()
            },

        });
        $('#dialogUpdate').modal('hide')
    }

    function viewAnnouncementModalOpen(announcement) {
        let title = document.getElementById(""ViewAnnouncementTitle"");
        let description = document.getElementById(""ViewAnnouncementDescription"");

        title.innerText = announcement.title
        description.innerText = announcement.description

    }
    let odjectGridName;
    function deleteAnnouncementModalOpen(model) {
        let id = document.getElementById(""deleteId"");
      ");
            WriteLiteral(@"  let deletedName = document.getElementById(""deletedName"");
        let deleteName = document.getElementById(""deleteName"");

        id.value = model.Id;

        deleteName.value = """";
        deletedName.textContent = model.Name;
        odjectGridName = model.Name;
    }
    function deleteModel(element) {
        dialogModel = ""dialogDelete"";

        let id = document.getElementById(""deleteId"");
        let deletedName = document.getElementById(""deleteName"");
        if (deletedName.value != odjectGridName) {

            setValidationInElement(deletedName, ""is-invalid"", ""Invalid name"");
            return;
        }
        $('#' + dialogModel).modal('hide');

        $.ajax({
            type: ""POST"",
            url: `/Announsment/Delete/${id.value}`,
            success: function () {
                getAnnouncements()
            }
        });
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<asp_net_mvc.Models.AnnouncementModels.IndexAnnounsmentModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
