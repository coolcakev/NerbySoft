@model asp_net_mvc.Models.AnnouncementModels.IndexAnnounsmentModel

<div class="text-center">
    <button class="myBtn" data-toggle="modal" data-target="#dialogCreate" id="buttonCreateOpen">Create</button>
    <div id="PlaceForAnnouncement">
      
    </div>

</div>
@*Create*@
<div class="modal fade" tabindex="-1" id="dialogCreate" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="card card-waves">
                <div class="card-header">
                    Create announcement
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="card-body">
                    <div class="datatable">
                        <div class="row">
                            <div id="CreateAnnouncement" class="col-lg-12">
                                <div class="form-group">
                                    <label for="registerLogin">Title</label>
                                    <input class="form-control" id="Title" placeholder="Title" style=" display: block; width: 100%;" type="text" oninput="clearValid(this)" />
                                    <div class="invalid-feedback" style="display:block">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="registerLogin">Description</label>
                                    <textarea class="form-control" id="Description" style="width:100%" placeholder="Body" oninput="clearValid(this)"></textarea>
                                    <div class="invalid-feedback" style="display:block">
                                    </div>
                                </div>

                                <div style="display: flex; flex-direction: row-reverse;">
                                    <button type="button" class="myBtn" onclick="createAnnouncement()">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*Update*@
<div class="modal fade" tabindex="-1" id="dialogUpdate" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="card card-waves">
                <div class="card-header">
                    Update announcement
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <input id="UpdateAnnouncementId" hidden />
                <div class="card-body">
                    <div class="datatable">
                        <div class="row">
                            <div id="UpdateAnnouncement" class="col-lg-12">
                                <div class="form-group">
                                    <label for="registerLogin">Title</label>
                                    <input class="form-control" id="UpdateTitle" placeholder="Title" style=" display: block; width: 100%;" type="text" oninput="clearValid(this)" />
                                    <div class="invalid-feedback" style="display:block">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="registerLogin">Description</label>
                                    <textarea class="form-control" id="UpdateDescription" style="width:100%" placeholder="Body" oninput="clearValid(this)"></textarea>
                                    <div class="invalid-feedback" style="display:block">
                                    </div>
                                </div>
                                <div style="display: flex; flex-direction: row-reverse;">
                                    <button type="button" class="myBtn" onclick="updateAnnouncement()">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*View*@
<div class="modal fade" tabindex="-1" id="dialogView" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="card card-waves">
                <div class="card-header">
                    Announcement
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="card-body">
                    <div class="datatable">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <h3>Title:</h3>
                                    <h5 id="ViewAnnouncementTitle"></h5>
                                </div>
                                <div class="form-group">
                                    <h3>Description:</h3>
                                    <p id="ViewAnnouncementDescription"></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@{await Html.RenderPartialAsync("PartialDelete", "Announcement");}

<script>
    document.addEventListener("DOMContentLoaded",()=> getAnnouncements())
    function createAnnounsmentElement(announsment) {
        let placeForAnnounsment = document.getElementById("PlaceForAnnouncement");
        let announsmentElement = document.createElement("div")
        announsmentElement.id = announsment.id;
        announsmentElement.classList.add("announcement");

        let templateForContentOfTopic = `<div class="announcement_content">
                    <strong>${announsment.id}. ${announsment.title}</strong>
                    <div>
                        ${announsment.description}
                    </div>
                    <div>
                        ${announsment.creationDate}
                    </div>
                </div>

                <div class="announcement_btn">
                    <button class="myBtn" data-toggle="modal" data-target="#dialogUpdate" id="buttonUpdateOpen" onclick="updateAnnouncementModalOpen({id:'${ announsment.id}',title:'${announsment.title}',description:'${announsment.description}'})">Update</button>
                    <button class="myBtn" data-toggle="modal" data-target="#dialogView" id="buttonViewOpen" onclick="viewAnnouncementModalOpen({id:'${announsment.id}',title:'${announsment.title}',description:'${announsment.description}',dateAdded:'${announsment.creationDate}'})">View</button>
                    <button class="myBtn" data-toggle="modal" data-target="#dialogDelete" id="buttonDeleteOpen" onclick="deleteAnnouncementModalOpen({Id:'${announsment.id}',Name:'${announsment.title}'})">Delete</button>
                </div>`
        announsmentElement.innerHTML = templateForContentOfTopic
        placeForAnnounsment.appendChild(announsmentElement)
    }
    function getAnnouncements() {
        $.ajax({
            type: "GET",
            url: "/Announsment/GetAnnouncements",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                    let placeForAnnounsment = document.getElementById("PlaceForAnnouncement");
                    placeForAnnounsment.innerHTML = "";
                data.forEach(announsment => {
                    createAnnounsmentElement(announsment)
                })
            }

        });

    }
    function validateAnnouncement(title, description) {
        if (title.value == "")
            setValidationInElement(title, "is-invalid", "Title is emtpy");

        if (description.value == "")
            setValidationInElement(description, "is-invalid", "Topic is emtpy");
    }
    function createAnnouncement() {
        let title = document.getElementById("Title");
        let description = document.getElementById("Description");

        if (title.value == "")
            setValidationInElement(title, "is-invalid", "Title is emtpy");

        if (description.value == "")
            setValidationInElement(description, "is-invalid", "Description is emtpy");

        let dialogModel = "CreateAnnouncement";
        let idInputs = getIdInput(dialogModel);

        var functionSome = Array.prototype.some;
        var isCorrect = functionSome.call(idInputs, function (item) {
            let element = document.getElementById(item);
            return element.classList.contains("is-invalid");
        });

        if (isCorrect)
            return;

        let model = {
            Description: description.value,
            Title: title.value
        }
        $.ajax({
            type: "POST",
            url: "/Announsment/Create",
            data: JSON.stringify(model),
            contentType: "application/json; charset=utf-8",
            success: function () {
                getAnnouncements()
            },

        });
        title.value = ""
        description.value = ""
        $('#dialogCreate').modal('hide')


    }
    function updateAnnouncementModalOpen(announcement) {
        let announcementId = document.getElementById("UpdateAnnouncementId");
        let title = document.getElementById("UpdateTitle");
        let description = document.getElementById("UpdateDescription");

        announcementId.value = announcement.id
        title.value = announcement.title
        description.value = announcement.description

        clearValid(title);
        clearValid(description);
    }
    function updateAnnouncement() {
        let announcementId = document.getElementById("UpdateAnnouncementId");
        let title = document.getElementById("UpdateTitle");
        let description = document.getElementById("UpdateDescription");

        validateAnnouncement(title, description);

        let dialogModel = "UpdateAnnouncement";
        let idInputs = getIdInput(dialogModel);

        var functionSome = Array.prototype.some;
        var isCorrect = functionSome.call(idInputs, function (item) {
            let element = document.getElementById(item);
            return element.classList.contains("is-invalid");
        });

        if (isCorrect)
            return;

        let model = {
            Id: Number(announcementId.value),
            Title: title.value,
            Description: description.value
        }

        $.ajax({
            type: "POST",
            url: "/Announsment/Update",
            data: JSON.stringify(model),
            contentType: "application/json; charset=utf-8",       
            success: function () {
                getAnnouncements()
            },

        });
        $('#dialogUpdate').modal('hide')
    }

    function viewAnnouncementModalOpen(announcement) {
        let title = document.getElementById("ViewAnnouncementTitle");
        let description = document.getElementById("ViewAnnouncementDescription");

        title.innerText = announcement.title
        description.innerText = announcement.description

    }
    let odjectGridName;
    function deleteAnnouncementModalOpen(model) {
        let id = document.getElementById("deleteId");
        let deletedName = document.getElementById("deletedName");
        let deleteName = document.getElementById("deleteName");

        id.value = model.Id;

        deleteName.value = "";
        deletedName.textContent = model.Name;
        odjectGridName = model.Name;
    }
    function deleteModel(element) {
        dialogModel = "dialogDelete";

        let id = document.getElementById("deleteId");
        let deletedName = document.getElementById("deleteName");
        if (deletedName.value != odjectGridName) {

            setValidationInElement(deletedName, "is-invalid", "Invalid name");
            return;
        }
        $('#' + dialogModel).modal('hide');

        $.ajax({
            type: "POST",
            url: `/Announsment/Delete/${id.value}`,
            success: function () {
                getAnnouncements()
            }
        });
    }
</script>
